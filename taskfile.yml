version: '3'

env:
  PHP_BIN: '{{.PHP_BIN | default "$(which php)"}}'
  NODE_BIN: '{{.NODE_BIN | default "$(which node)"}}'
  PNPM_BIN: '{{.PNPM_BIN | default "$(which pnpm)"}}'
  COMPOSER_BIN: '{{.COMPOSER_BIN | default "$(which composer)"}}'

vars:
  CONFIG_DIR: '{{.TASKFILE_DIR}}/config/utils'
  NODEJS_BIN_DIR: '{{.TASKFILE_DIR}}/node_modules/.bin'
  COMPOSER_BIN_DIR: '{{.TASKFILE_DIR}}/vendor/bin'

tasks:
  default:
    desc: 'List all command.'
    cmd: 'task --list-all'

  # Staff.

  typo3:
    label: 'Typo3'
    desc: 'Runs `typo3` command.'
    requires:
      vars:
        - COMPOSER_BIN_DIR
    cmd: '{{.PHP_BIN}} {{.COMPOSER_BIN_DIR}}/typo3 {{.CLI_ARGS}}'

  composer:
    label: 'Composer'
    desc: 'Runs `composer` command.'
    internal: true
    cmd: '{{.PHP_BIN}} {{.COMPOSER_BIN}} {{.CLI_ARGS}}'

  pnpm:
    label: 'pnpm'
    desc: 'Runs `pnpm` command.'
    internal: true
    cmd: '{{.PNPM_BIN}} {{.CLI_ARGS}}'

  php-cs-fixer:
    label: 'PHP CS Fixer'
    desc: 'Runs `php-cs-fixer` command.'
    aliases:
      - cs-fixer
      - php:cs-fixer
    cmd: '{{.PHP_BIN}} {{.COMPOSER_BIN_DIR}}/php-cs-fixer fix --config {{.CONFIG_DIR}}/.php-cs-fixer.php --ansi -v {{.CLI_ARGS}}'

  phpstan:
    label: 'PHPStan'
    desc: 'Runs `phpstan` command.'
    aliases:
      - php:stan
    cmd: '{{.PHP_BIN}} {{.COMPOSER_BIN_DIR}}/phpstan --configuration={{.CONFIG_DIR}}/phpstan.neon --ansi {{.CLI_ARGS}}'

  rector:
    label: 'Rector'
    desc: 'Runs `rector` command.'
    cmd: '{{.PHP_BIN}} {{.COMPOSER_BIN_DIR}}/rector process --config={{.CONFIG_DIR}}/rector.php --ansi {{.CLI_ARGS}}'

  typoscript-lint:
    label: 'TypoScript lint'
    desc: 'Runs `typescript-lint` command.'
    cmd: '{{.PHP_BIN}} {{.COMPOSER_BIN_DIR}}/typoscript-lint -c {{.CONFIG_DIR}}/typoscript-lint.yml --fail-on-warnings -n --ansi {{.CLI_ARGS}}'

  yaml-lint:
    label: 'Yaml lint'
    desc: 'Runs `yaml-lint` command.'
    cmd: '{{.PHP_BIN}} {{.COMPOSER_BIN_DIR}}/yaml-lint --ansi {{.CLI_ARGS}}'

  prettier:
    label: 'Prettier'
    desc: 'Runs `prettier` command.'
    cmd: '{{.NODEJS_BIN_DIR}}/prettier {{.CLI_ARGS}} --config={{.CONFIG_DIR}}/.prettierrc.json --ignore-path={{.CONFIG_DIR}}/.prettierignore'

  cspell:
    label: 'CSPell'
    desc: 'Runs `cspell` command.'
    cmd: '{{.NODEJS_BIN_DIR}}/cspell {{.CLI_ARGS}}'

  # Work commands.

  cache:clear:
    label: 'Clear Cache'
    desc: 'Clear all cache in typo3'
    aliases:
      - c
      - cc
      - cr
      - cf
      - cache:flush
    cmds:
      - task: typo3
        vars: { CLI_ARGS: 'cache:flush' }

  cleanup:
    label: 'Cleanup content'
    desc: 'Cleanup all content in typo3'
    aliases:
      - clean
    cmds:
      - task: typo3
        vars: { CLI_ARGS: 'cleanup:deletedrecords' }
      - task: typo3
        vars: { CLI_ARGS: 'cleanup:flexforms' }
      - task: typo3
        vars: { CLI_ARGS: 'cleanup:localprocessedfiles' }
      - task: typo3
        vars: { CLI_ARGS: 'cleanup:missingrelations -n' }
      - task: typo3
        vars: { CLI_ARGS: 'cleanup:orphanrecords' }

  dump:db:
    desc: 'Create a backup of the database with Typo3.'
    vars:
      BACKUP_NAME:
        sh: 'echo db_$(date +%Y.%m.%d_%H:%M_%:::z)'
    aliases:
      - ddb
      - dbd
      - db:dump
    cmds:
      - 'mkdir -p ./dump'
      - task: typo3
        vars: { CLI_ARGS: "database:export -c Default -e 'cf_*' -e 'cache_*' -e '[bf]e_sessions' -e sys_log -e sys_history > {{.BACKUP_NAME}}.sql" }
      - 'tar -czvf ./dump/{{.BACKUP_NAME}}.tar.gz {{.BACKUP_NAME}}.sql'
      - 'rm {{.BACKUP_NAME}}.sql'

  # Linters.

  lint:
    label: 'Project lint'
    desc: 'Validates project files.'
    aliases:
      - l
    cmds:
      - task: lint:composer
      - task: lint:php:cs-fixer
      - task: lint:php:stan
      - task: lint:spellcheck
      - task: lint:rector
      - task: lint:yml
      - task: lint:typoscript
      - task: lint:prettier

  lint:composer:
    label: 'Composer validation'
    desc: 'Validates composer.json file and checks platform requirements.'
    cmds:
      - task: composer
        vars: { CLI_ARGS: 'validate --strict --ansi' }
      - task: composer
        vars: { CLI_ARGS: 'check-platform-req --ansi' }

  lint:php:cs-fixer:
    label: 'PHP CS Fixer validation'
    desc: 'Lint php files.'
    aliases:
      - lint:php
      - lint:php-cs-fixer
    cmds:
      - task: php-cs-fixer
        vars: { CLI_ARGS: '--dry-run --diff' }

  lint:php:stan:
    label: 'PHPStan analyze'
    desc: 'Analyze PHP code for bugs and errors.'
    aliases:
      - lint:phpstan
    cmds:
      - task: phpstan
        vars: { CLI_ARGS: 'analyze' }

  lint:rector:
    label: 'Rector check'
    desc: 'Check Rector issues.'
    cmds:
      - task: rector
        vars: { CLI_ARGS: '--dry-run' }

  lint:yml:
    label: 'YML linter'
    desc: 'Lints Y(A)ML files.'
    aliases:
      - ymllint
      - yamllint
      - lint:yaml
    cmds:
      - task: yaml-lint
        vars: { CLI_ARGS: 'config ext {{.CLI_ARGS}}' }

  lint:typoscript:
    label: 'TypoScript linter'
    desc: 'Lints typoscript files.'
    cmds:
      - task: typoscript-lint

  lint:prettier:
    label: 'Prettier'
    desc: 'Checks for common format issues with prettier.'
    aliases:
      - format
      - lint:format
    cmds:
      - task: prettier
        vars: { CLI_ARGS: '-c config ext' }

  lint:spellcheck:
    label: 'Spellcheck'
    desc: 'Checks for common spelling issues.'
    aliases:
      - spellcheck
      - lint:cspell
    cmds:
      - 'find ./config/cspell -name "*.dic" -exec sort {} -o {} \;'
      - task: cspell
        vars: { CLI_ARGS: '--config {{.CONFIG_DIR}}/.cspell.json --no-progress "**" {{.CLI_ARGS}}' }

  # Fixing.

  fix:
    label: 'Fixing found issues'
    desc: 'Trying for automated fixes for found problems.'
    aliases:
      - f
    cmds:
      - task: fix:php:cs-fixer
      - task: fix:rector
      - task: fix:prettier

  fix:php:cs-fixer:
    label: 'PHP CS Fixer'
    desc: 'Fix PHP CS Fixer issues.'
    aliases:
      - fix:php
      - fix:php-cs-fixer
    cmds:
      - task: php:cs-fixer

  fix:rector:
    label: 'Rector'
    desc: 'Fix Rector issues.'
    cmds:
      - task: rector

  fix:prettier:
    label: 'Prettier'
    desc: 'Fix format issues.'
    aliases:
      - fix:format
      - format:fix
    cmds:
      - task: prettier
        vars: { CLI_ARGS: '-wl config ext' }
